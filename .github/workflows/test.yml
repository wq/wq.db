name: Tests

on: [push, pull_request]

jobs:
  build:
    name: ${{ matrix.variant}} py=${{ matrix.python-version }} dj=${{ matrix.django-version }} drf=${{ matrix.drf-version }}
    runs-on: ubuntu-20.04
    env:
      TEST_VARIANT: ${{ matrix.variant }}
    strategy:
      matrix:
        variant: [default, spatialite, postgis]
        python-version: [3.9]
        django-version: [2.2.20, 3.2.12, 4.0.2]
        drf-version: [3.13.1]
        include:
        - python-version: "3.10"
          django-version: 4.0.2
          drf-version: 3.13.1
          variant: default
        - python-version: 3.9
          django-version: 3.2.12
          drf-version: 3.12.4
          variant: default
        - python-version: 3.9
          django-version: 3.2.12
          drf-version: 3.13.1
          variant: nonroot
        - python-version: 3.8
          django-version: 3.2.12
          drf-version: 3.13.1
          variant: default
        - python-version: 3.7
          django-version: 3.2.12
          drf-version: 3.13.1
          variant: default
        - python-version: 3.6
          django-version: 3.2.12
          drf-version: 3.13.1
          variant: default
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install flake8 pytest wheel
        python -m pip install django==${{ matrix.django-version }}
        python -m pip install djangorestframework==${{ matrix.drf-version }}
        python -m pip install django-mustache
        python -m pip install .
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Set up SpatiaLite
      if: ${{ matrix.variant == 'spatialite' }}
      run: |
         sudo apt-get update
         sudo apt-get install libsqlite3-mod-spatialite gdal-bin
    - name: Set up PostgreSQL
      if: ${{ matrix.variant == 'postgis' }}
      run: |
        sudo sh -c 'echo "deb http://apt.postgresql.org/pub/repos/apt $(lsb_release -cs)-pgdg main" > /etc/apt/sources.list.d/pgdg.list'
        sudo apt-get update
        sudo apt-get install postgresql-14-postgis-3
        # postgresql is already installed on image
        sudo systemctl start postgresql.service
        sudo -u postgres createuser --superuser $USER
        createdb wqdb_test
        psql wqdb_test -c "CREATE EXTENSION postgis;"
        python -m pip install "psycopg2-binary<2.9"
    - name: Test with unittest
      run: python setup.py test
